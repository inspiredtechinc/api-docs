# name: Docs Preview

# on:
#   repository_dispatch:
#     types: [spec-sync]

# concurrency:
#   group: docs-preview-${{ github.event.client_payload.spec_branch }}
#   cancel-in-progress: false

# jobs:
#   preview:
#     if: >
#       github.event_name == 'repository_dispatch' &&
#       contains(fromJson('["opened","synchronize","reopened","merged"]'),
#                github.event.client_payload.event_type)
#     runs-on: ubuntu-latest

#     steps:
#       # 0: Debug incoming event payload
#       - name: 🐛 Debug incoming dispatch payload
#         if: github.event_name == 'repository_dispatch'
#         run: |
#           echo "=== DISPATCH PAYLOAD ==="
#           echo "event_type:      ${{ github.event.client_payload.event_type }}"
#           echo "spec_path:       ${{ github.event.client_payload.spec_path }}"
#           echo "spec_branch:     ${{ github.event.client_payload.spec_branch }}"
#           echo "spec_pr_number:  ${{ github.event.client_payload.spec_pr_number }}"
#           echo "ms_pr_number:    ${{ github.event.client_payload.ms_pr_number }}"
#           echo "ms_repo:         ${{ github.event.client_payload.ms_repo }}"
#           echo "========================"

#       # 1: Checkout the api-docs repo code
#       - name: Checkout api-docs
#         uses: actions/checkout@v3

#       # 2: Checkout api-specs and copy in the updated spec
#       - name: Checkout api-specs
#         if: github.event.client_payload.event_type != 'closed'
#         uses: actions/checkout@v3
#         with:
#           repository: inspiredtechinc/api-specs
#           ref: ${{ github.event.client_payload.spec_branch }}
#           token: ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
#           path: api-specs-repo

#       - name: Copy updated spec into docs folder
#         if: github.event.client_payload.event_type != 'closed'
#         run: |
#           mkdir -p specs/services
#           cp api-specs-repo/${{ github.event.client_payload.spec_path }} specs/services/
#           echo "Copied:" && ls -l specs/services/$(basename "${{ github.event.client_payload.spec_path }}")


#       # 3: Install dependencies
#       - name: Install dependencies
#         run: npm install

#       # 4: Determine BUILD_ENV and PUBLISH_DIR
#       - name: Set ENV values
#         run: |
#           EVENT_TYPE="${{ github.event.client_payload.event_type }}"
#           if [ "$EVENT_TYPE" = "merged" ]; then
#             echo "BUILD_ENV=staging" >> $GITHUB_ENV
#             echo "PUBLISH_DIR=generated/staging" >> $GITHUB_ENV
#           else
#             echo "BUILD_ENV=preview" >> $GITHUB_ENV
#             echo "PUBLISH_DIR=generated/${{ github.event.client_payload.spec_branch }}" >> $GITHUB_ENV
#           fi
#           echo "Using BUILD_ENV=$BUILD_ENV, PUBLISH_DIR=$PUBLISH_DIR"

#       # 5: Generate the docs
#       - name: Generate docs
#         if: github.event.client_payload.event_type != 'closed'
#         run: node scripts/generate-docs.js
#         env:
#           BUILD_ENV: ${{ env.BUILD_ENV }}

#       # 5.5: Merge old previews from gh-pages
#       - name: Merge existing previews from gh-pages
#         if: github.event.client_payload.event_type != 'closed'
#         run: |
#           echo "Merging previously published previews..."
#           git clone --depth=1 --branch gh-pages \
#             https://x-access-token:${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}@github.com/inspiredtechinc/api-docs.git gh-pages-tmp
#           mkdir -p public/generated
#           cp -rv gh-pages-tmp/generated/* public/generated/ || true


#       - name: Regenerate main index.html
#         if: github.event.client_payload.event_type != 'closed'
#         run: node scripts/generate-docs.js --index-only

#       # 6: Publish to gh-pages
#       - name: Publish to GitHub Pages
#         if: github.event.client_payload.event_type != 'closed'
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
#           publish_dir: public
#           # destination_dir: ${{ env.PUBLISH_DIR }}
#           user_name: GitHub Actions
#           user_email: actions@github.com
#           keep_files: true

#       # 7: Ask api-specs to post a preview comment on all relevant PRs
#       - name: Ask api-specs to post preview comment
#         uses: peter-evans/repository-dispatch@v2
#         with:
#           token: ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
#           repository: inspiredtechinc/api-specs
#           event-type: post-preview-comment
#           client-payload: |
#             {
#               "event_type": "${{ github.event.client_payload.event_type }}",
#               "ms_repo": "${{ github.event.client_payload.ms_repo }}",
#               "ms_pr_number": "${{ github.event.client_payload.ms_pr_number }}",
#               "preview_url": "https://inspiredtechinc.github.io/api-docs/${{ env.PUBLISH_DIR }}/index.html",
#               "spec_pr_number": "${{ github.event.client_payload.spec_pr_number }}"
#             }

#       # 9: Cleanup on PR close
#       - name: Log cleanup message
#         if: >
#           github.event_name == 'repository_dispatch' &&
#           github.event.client_payload.event_type == 'closed'
#         run: echo "Cleaning up preview for ${{ github.event.client_payload.spec_branch }}"

#       - name: Cleanup preview on PR close
#         if: >
#           github.event_name == 'repository_dispatch' &&
#           github.event.client_payload.event_type == 'closed'
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
#           publish_dir: /dev/null
#           destination_dir: generated/${{ github.event.client_payload.spec_branch }}
#           user_name: GitHub Actions
#           user_email: actions@github.com
#           keep_files: false
