name: Docs Preview

on:
  repository_dispatch:
    types: [spec-sync]

concurrency:
  group: docs-preview-${{ github.event.client_payload.spec_branch }}
  cancel-in-progress: false

jobs:
  preview:
    if: >
      github.event_name == 'repository_dispatch' &&
      contains(fromJson('["opened","synchronize","reopened","merged"]'),
               github.event.client_payload.event_type)
    runs-on: ubuntu-latest

    steps:
      # 0: Debug incoming dispatch payload
      - name: 🐛 Debug incoming dispatch payload
        run: |
          echo "=== DISPATCH PAYLOAD ==="
          echo "event_type:      ${{ github.event.client_payload.event_type }}"
          echo "spec_branch:     ${{ github.event.client_payload.spec_branch }}"
          echo "spec_pr_number:  ${{ github.event.client_payload.spec_pr_number }}"
          echo "ms_pr_number:    ${{ github.event.client_payload.ms_pr_number }}"
          echo "ms_repo:         ${{ github.event.client_payload.ms_repo }}"
          echo "========================"

      # 1: Checkout api-docs
      - name: Checkout api-docs
        uses: actions/checkout@v3

      # 2: Checkout api-specs and copy in the updated spec (skip on close)
      - name: Checkout api-specs & copy spec
        if: github.event.client_payload.event_type != 'closed'
        uses: actions/checkout@v3
        with:
          repository: inspiredtechinc/api-specs
          ref:         ${{ github.event.client_payload.spec_branch }}
          token:       ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
          path:        api-specs-repo

      - name: Copy updated spec into docs folder
        if: github.event.client_payload.event_type != 'closed'
        run: |
          mkdir -p specs/services
          cp api-specs-repo/${{ github.event.client_payload.spec_path }} specs/services/

      # 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # 4: Determine BUILD_ENV and PUBLISH_DIR
      - name: Set ENV values
        run: |
          EVENT="${{ github.event.client_payload.event_type }}"
          SERVICE="${{ github.event.client_payload.ms_repo }}" # e.g., inspiredtechinc/project-x-user-service
          SERVICE_NAME=$(basename "$SERVICE")                  # e.g., project-x-user-service
          PR_NUMBER="${{ github.event.client_payload.ms_pr_number }}"

          if [ "$EVENT" = "merged" ]; then
            echo "BUILD_ENV=staging" >> $GITHUB_ENV
            echo "PUBLISH_DIR=generated/staging/$SERVICE_NAME" >> $GITHUB_ENV
          else
            echo "BUILD_ENV=preview" >> $GITHUB_ENV
            echo "PUBLISH_DIR=generated/sync/$SERVICE_NAME-pr$PR_NUMBER" >> $GITHUB_ENV
          fi


      # 5: Generate the docs
      - name: Generate docs
        if: github.event.client_payload.event_type != 'closed'
        run: node scripts/generate-docs.js
        env:
          BUILD_ENV: ${{ env.BUILD_ENV }}

      - name: Regenerate main index.html
        if: github.event.client_payload.event_type != 'closed'
        run: node scripts/generate-docs.js --index-only

      # 6: Merge any existing previews so we don't wipe other branches
      - name: Merge existing previews
        if: github.event.client_payload.event_type != 'closed'
        run: |
          git clone --depth=1 --branch gh-pages \
            https://x-access-token:${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}@github.com/inspiredtechinc/api-docs.git tmp
          cp -r tmp/generated public/ || true

      # 7: Publish everything under public/ (including root index.html)
      - name: Publish to GitHub Pages
        if: github.event.client_payload.event_type != 'closed'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token:    ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
          publish_dir:     public
          publish_branch:  gh-pages
          destination_dir: ${{ env.PUBLISH_DIR }}     # <— put previews/staging in the right folder
          user_name:       GitHub Actions
          user_email:      actions@github.com
          keep_files:      true

      # 8: Tell api-specs to comment on the PRs
      - name: Ask api-specs to post preview comment
        uses: peter-evans/repository-dispatch@v2
        with:
          token:       ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
          repository:  inspiredtechinc/api-specs
          event-type:  post-preview-comment
          client-payload: |
            {
              "event_type":     "${{ github.event.client_payload.event_type }}",
              "ms_repo":        "${{ github.event.client_payload.ms_repo }}",
              "ms_pr_number":   "${{ github.event.client_payload.ms_pr_number }}",
              "preview_url":    "https://inspiredtechinc.github.io/api-docs/${{ env.PUBLISH_DIR }}/index.html",
              "spec_pr_number":"${{ github.event.client_payload.spec_pr_number }}"
            }

      # 9a: Log that we’re tearing down the preview
      - name: Log cleanup message
        if: github.event.client_payload.event_type == 'closed'
        run: |
          echo "Cleaning up preview for ${{ github.event.client_payload.spec_branch }}"

      # 9b: Actually delete the preview directory
      - name: Cleanup preview on PR close
        if: github.event.client_payload.event_type == 'closed'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token:     ${{ secrets.OPENAPI_CICD_WORKFLOW_TOKEN }}
          publish_dir:      /dev/null
          destination_dir:  generated/${{ github.event.client_payload.spec_branch }}
          user_name:        GitHub Actions
          user_email:       actions@github.com
          keep_files:       false

      # 10: Rebuild root index so the closed‑PR card disappears
      - name: Regenerate root index.html
        if: github.event.client_payload.event_type == 'closed'
        run: |
          node scripts/generate-docs.js --index-only
